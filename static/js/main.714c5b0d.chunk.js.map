{"version":3,"sources":["context.js","component/contacts/Contact.js","component/contacts/Contacts.js","component/layout/Header.js","component/layout/TextInputGroup.js","component/contacts/AddContact.js","component/contacts/EditContact.js","component/pages/About.js","component/pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","dispatch","setState","_this2","axios","get","then","res","data","react_default","a","createElement","value","props","children","Component","Consumer","Contact","showOnClick","showContactInfo","deleteClickHandler","_ref","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","delete","stop","_x","_x2","apply","arguments","_this$props$contact","name","email","phone","className","style","cursor","onClick","color","float","Link","to","marginRight","defaultProps","Contacts","Fragment","contacts_Contact","key","Header","branding","href","TextInputGroup","placeholder","onChange","label","error","htmlFor","classNames","is-invalid","AddContact","onChangeInput","e","defineProperty","target","onSubmitForm","_this$state","preventDefault","errors","abrupt","post","sent","history","push","_this$state2","onSubmit","bind","layout_TextInputGroup","EditContact","put","match","params","About","NotFound","App","context","HashRouter","layout_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.714c5b0d.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport axios from 'axios';\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'DELETE_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(contact => contact.id !== action.payload)\r\n      }\r\n    case 'ADD_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts]\r\n      }\r\n    case 'UPDATE_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map((contact) => {\r\n          if (contact.id === action.payload.id) {\r\n            contact = action.payload;\r\n            return contact;\r\n          }\r\n          return contact;\r\n        })\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nclass Provider extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      contacts: [],\r\n      dispatch: action => this.setState(state => reducer(state, action))\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    axios.get('https://jsonplaceholder.typicode.com/users')\r\n      .then(res => this.setState({\r\n        contacts: res.data\r\n      }))\r\n  }\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Provider;\r\nexport const Consumer = Context.Consumer;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { Consumer } from '../../context';\r\n\r\n\r\nclass Contact extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      showContactInfo: false\r\n    }\r\n  }\r\n  showOnClick = () => {\r\n    this.setState({\r\n      showContactInfo: !this.state.showContactInfo\r\n    })\r\n  }\r\n\r\n  deleteClickHandler = async (id, dispatch) => {\r\n    await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n    dispatch({ type: 'DELETE_CONTACT', payload: id });\r\n  }\r\n  render() {\r\n    const { name, email, phone, id } = this.props.contact;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body mb-3\">\r\n              <h4>{name}{' '}\r\n                <i style={{ cursor: 'pointer' }} onClick={this.showOnClick} className=\"fas fa-sort-down\"></i>\r\n                <i style={{ cursor: 'pointer', color: 'red', float: 'right' }} onClick={() => this.deleteClickHandler(id, dispatch)} className=\"fas fa-trash\"></i>\r\n                <Link to={`contact/edit/${id}`}>\r\n                  <i style={{ cursor: 'pointer', marginRight: '20px', float: 'right' }} className=\"fas fa-pencil-alt\"></i>\r\n                </Link>\r\n              </h4>\r\n              {this.state.showContactInfo ? (\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">Email: {email} </li>\r\n                  <li className=\"list-group-item\">Phone: {phone}</li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          )\r\n        }}\r\n      </Consumer>\r\n    )\r\n  }\r\n}\r\n\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired,\r\n}\r\n\r\nContact.defaultProps = {\r\n  contact: {\r\n    name: 'Imad',\r\n    email: 'imadramo@gmail.com',\r\n    phone: '1155554445'\r\n  }\r\n}\r\n\r\nexport default Contact;","import React, { Component } from 'react'\r\nimport Contact from './Contact';\r\nimport { Consumer } from '../../context';\r\n\r\nclass Contacts extends Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { contacts } = value;\r\n          return (\r\n            <React.Fragment>\r\n              <h1 className=\"display-4 mb-2\"><span className=\"text-success\">Contact</span> List</h1>\r\n\r\n              {contacts.map(contact => (\r\n                <Contact\r\n                  key={contact.id}\r\n                  contact={contact} />\r\n              ))}\r\n            </React.Fragment>\r\n          )\r\n        }}\r\n      </Consumer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Contacts;","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n  const { branding } = props;\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark mb-3 \">\r\n      <div className=\"container\">\r\n        <a href=\"/\" className=\"navbar-brand\">\r\n          {branding}\r\n        </a>\r\n        <div>\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-link\"><i className=\"fas fa-home-alt  mr-1\"></i>Home</Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/contact/add\" className=\"nav-link\"><i className=\"fas fa-plus-circle mr-1\"></i>Add</Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/about\" className=\"nav-link\"> <i className=\"fas fa-question-circle mr-1\"></i> About</Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nHeader.defaultProps = {\r\n  branding: 'My React App'\r\n}\r\n\r\nHeader.propTypes = {\r\n  branding: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Header;","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport classNames from 'classnames';\r\n\r\n\r\nconst TextInputGroup = ({ name, id, placeholder, type, value, onChange, label, error }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={id}>{label}: </label>\r\n      <input onChange={onChange}\r\n        className={classNames(\"form-control\", {\r\n          'is-invalid': error\r\n        })}\r\n        placeholder={placeholder}\r\n        type={type}\r\n        name={name}\r\n        id={id}\r\n        value={value} />\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  )\r\n}\r\n\r\nTextInputGroup.propTypes = {\r\n  error: PropTypes.string,\r\n  name: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  id: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n}\r\n\r\nTextInputGroup.defaultProps = {\r\n  type: 'text'\r\n}\r\n\r\nexport default TextInputGroup;","import React, { Component } from 'react'\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\nclass AddContact extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n      errors: {}\r\n    }\r\n  }\r\n\r\n  onChangeInput = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  onSubmitForm = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n    if (name === '') {\r\n      this.setState({\r\n        errors: { name: 'Name is required!' }\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (email === '') {\r\n      this.setState({\r\n        errors: { email: 'Email is required!' }\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (phone === '') {\r\n      this.setState({\r\n        errors: { phone: 'Phone is required!' }\r\n      });\r\n      return;\r\n    }\r\n    const res = await axios.post('https://jsonplaceholder.typicode.com/users', { name, email, phone });\r\n\r\n    dispatch({\r\n      type: 'ADD_CONTACT',\r\n      payload: res.data\r\n    });\r\n\r\n    this.setState({\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n      errors: {}\r\n    });\r\n\r\n    this.props.history.push('/');\r\n  }\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">\r\n                <h1 className=\"display-4\">Add Contact</h1>\r\n              </div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmitForm.bind(this, dispatch)} >\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    id=\"name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Name\"\r\n                    value={name}\r\n                    onChange={this.onChangeInput}\r\n                    error={errors.name} />\r\n\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    id=\"email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Email\"\r\n                    value={email}\r\n                    onChange={this.onChangeInput}\r\n                    error={errors.email} />\r\n\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    id=\"phone\"\r\n                    name=\"phone\"\r\n                    type=\"tel\"\r\n                    placeholder=\"Phone\"\r\n                    value={phone}\r\n                    onChange={this.onChangeInput}\r\n                    error={errors.phone} />\r\n\r\n                  <input type=\"submit\" className=\"btn btn-primary btn-block\" value=\"Add Contact\" />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          )\r\n        }}\r\n      </Consumer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AddContact;","import React, { Component } from 'react'\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\nclass EditContact extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n      errors: {}\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n    const contact = {\r\n      id: id,\r\n      name: res.data.name,\r\n      email: res.data.email,\r\n      phone: res.data.phone\r\n    }\r\n    this.setState(contact);\r\n  }\r\n\r\n  onChangeInput = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  onSubmitForm = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { id, name, email, phone } = this.state;\r\n    if (name === '') {\r\n      this.setState({\r\n        errors: { name: 'Name is required!' }\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (email === '') {\r\n      this.setState({\r\n        errors: { email: 'Email is required!' }\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (phone === '') {\r\n      this.setState({\r\n        errors: { phone: 'Phone is required!' }\r\n      });\r\n      return;\r\n    }\r\n    const contact = {\r\n      name,\r\n      email,\r\n      phone\r\n    }\r\n    const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, contact);\r\n    dispatch({ type: 'UPDATE_CONTACT', payload: res.data })\r\n\r\n    this.setState({\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n      errors: {}\r\n    });\r\n\r\n    this.props.history.push('/');\r\n  }\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">\r\n                <h1 className=\"display-4\">Edit Contact</h1>\r\n              </div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmitForm.bind(this, dispatch)} >\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    id=\"name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Name\"\r\n                    value={name}\r\n                    onChange={this.onChangeInput}\r\n                    error={errors.name} />\r\n\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    id=\"email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Email\"\r\n                    value={email}\r\n                    onChange={this.onChangeInput}\r\n                    error={errors.email} />\r\n\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    id=\"phone\"\r\n                    name=\"phone\"\r\n                    type=\"tel\"\r\n                    placeholder=\"Phone\"\r\n                    value={phone}\r\n                    onChange={this.onChangeInput}\r\n                    error={errors.phone} />\r\n\r\n                  <input type=\"submit\" className=\"btn btn-primary btn-block\" value=\"Update Contact\" />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          )\r\n        }}\r\n      </Consumer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default EditContact;","import React from 'react'\r\n\r\nexport default function About() {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">About Contacts Manager</h1>\r\n      <p className=\"lead\">Lorem, ipsum dolor sit amet consectetur adipisicing elit. Earum voluptates sit tempora minima dignissimos fugiat omnis nihil alias? Dolor, excepturi.</p>\r\n      <p className=\"lead\">Lorem ipsum dolor sit amet consectetur adipisicing elit. Nesciunt, tempore? Quasi commodi ratione quibusdam. Nihil obcaecati veritatis dolores sapiente officia cum quisquam rem quasi facilis. Asperiores sit corporis aut labore?</p>\r\n      <p className=\"text-secondary\">Version: 1.0.0</p>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function NotFound() {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\"><span className=\"text-danger font-weight-bold\">404</span> Page Not Found</h1>\r\n      <p>Sorry this page does no exist</p>\r\n    </div>\r\n  )\r\n}\r\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom'\nimport Contacts from './component/contacts/Contacts';\nimport Header from './component/layout/Header';\nimport AddContact from './component/contacts/AddContact';\nimport EditContact from './component/contacts/EditContact';\nimport About from './component/pages/About';\nimport NotFound from './component/pages/NotFound';\nimport Provider from './context';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div>\n            <Header branding=\"Contacts Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/about\" component={About} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}